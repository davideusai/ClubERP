@model ClubERP.DAO.Sail

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<ClubERP.DAO.State> stateList = ClubERP.ORM.State.List();
    List<ClubERP.DAO.Port> portList = ClubERP.ORM.Port.List();
    List<ClubERP.DAO.SailingMode> sailingModeList = ClubERP.ORM.SailingMode.List();
    List<ClubERP.DAO.Boat> boatList = ClubERP.ORM.Boat.List();
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Sail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Date de départ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => Model.DepartureDate, format: Model.DepartureDate.ToShortDateString(), htmlAttributes: new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.DepartureDate, "", new { @class = "text-danger" })
             </div>
        </div>

        <div class="form-group">
            @Html.Label("Date d'arrivée", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => Model.ArrivalDate, format: Model.ArrivalDate.ToShortDateString(), htmlAttributes: new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.ArrivalDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Port de départ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DeparturePort.Id, new SelectList(portList, "Id", "Name"),"---Please select port---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DeparturePort.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Port d'arrivée", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ArrivalPort.Id, new SelectList(portList, "Id", "Name"), "---Please select port---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ArrivalPort.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Bateau", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Boat.Id, new SelectList(boatList, "Id", "Name"), "---Please select boat---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Boat.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mode", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SailingMode.Id, new SelectList(sailingModeList, "Id", "Name"), "---Please select mode---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SailingMode.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Prix", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Commentaire", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Commentary, htmlAttributes: new { @class = "form-control large-input" })
                @Html.ValidationMessageFor(model => model.Commentary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Statut", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.State.Id, new SelectList(stateList, "Id", "Name"), "---Please select state---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () { // will trigger when the document is ready

            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy'
            }); //Initialise any date pickers
        });
    </script>
}
